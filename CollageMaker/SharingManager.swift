import UIKit
import Darwin.Mach

    /// –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é sharing –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    class SharingManager {
        
        // MARK: - üîç –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
        static private var sharingAttempts: Int = 0
        static private var currentActivityViewController: UIActivityViewController?
        static private var currentPresentingViewController: UIViewController?
        static private var sharingTimer: Timer?
        static private var isCurrentlySharing: Bool = false
        
        // MARK: - üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–®–ò–ë–û–ö
        static private var errorStats: [String: Int] = [:]
        static private var shareSuccessCount: Int = 0
        static private var shareFailureCount: Int = 0
        
        // MARK: - üö® –î–ï–¢–ï–ö–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–ù–´–• –ü–†–û–ë–õ–ï–ú
        static private var systemIssuesDetected: [String] = []
        static let shared = SharingManager()
        
        private init() {}
        
        /// –î–µ–ª–∏—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        /// - Parameters:
        ///   - image: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è sharing
        ///   - text: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è sharing (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        ///   - sourceView: View –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        ///   - sourceRect: Rect –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        ///   - presentingViewController: View controller –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
        func shareImage(
            _ image: UIImage,
            withText text: String? = nil,
            sourceView: UIView,
            sourceRect: CGRect,
            from presentingViewController: UIViewController,
            completion: (() -> Void)? = nil
        ) {
            print("üîó SharingManager: –ù–∞—á–∏–Ω–∞–µ–º sharing –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            
            // üîç –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´
            Self.diagnoseSystemState()
            
            // üö® –ü–†–û–í–ï–†–ö–ê –ù–ê –ü–û–í–¢–û–†–ù–´–ï –ü–û–ü–´–¢–ö–ò
            if Self.isCurrentlySharing {
                print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –®–∞—Ä–∏–Ω–≥ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ! –û—Ç–º–µ–Ω—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø–æ–ø—ã—Ç–∫—É")
                Self.showCurrentSharingAlert(from: presentingViewController)
                return
            }
            
            // üîç –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø PRESENTING VIEW CONTROLLER
            if presentingViewController.presentedViewController != nil {
                print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: Presenting VC —É–∂–µ —á—Ç–æ-—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç!")
                print("üîç –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ: \(presentingViewController.presentedViewController?.description ?? "unknown")")
                
                // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç–∞—Ä—ã–π Activity VC - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º
                if let presented = presentingViewController.presentedViewController as? UIActivityViewController {
                    print("üîß –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å—Ç–∞—Ä—ã–π Activity VC - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º")
                    presented.dismiss(animated: false) {
                        // –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º sharing –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è
                        DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
                            SharingManager.shared.shareImage(
                                image,
                                withText: text,
                                sourceView: sourceView,
                                sourceRect: sourceRect,
                                from: presentingViewController,
                                completion: completion
                            )
                        }
                    }
                    return
                }
                
                // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                showSharingError(from: presentingViewController, message: "–ù–µ —É–¥–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å —à–∞—Ä–∏–Ω–≥ - –¥—Ä—É–≥–æ–µ –æ–∫–Ω–æ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ")
                return
            }
            
            // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–∞–µ–º Data –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
            guard let optimizedImageData = optimizeImageForSharing(image) else {
                print("‚ùå SharingManager: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è sharing")
                showSharingError(from: presentingViewController, message: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è sharing")
                Self.shareFailureCount += 1
                return
            }
            
            print("‚úÖ SharingManager: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, —Ä–∞–∑–º–µ—Ä: \(optimizedImageData.count) bytes")
            
            // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è sharing
            var activityItems: [Any] = []
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ Data –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
            activityItems.append(optimizedImageData)
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –æ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
            if let text = text, !text.isEmpty {
                activityItems.append(text)
                print("‚úÖ SharingManager: –î–æ–±–∞–≤–ª–µ–Ω —Ç–µ–∫—Å—Ç: \(text)")
            }
            
            // –°–æ–∑–¥–∞–µ–º Activity View Controller
            let activityVC = UIActivityViewController(
                activityItems: activityItems,
                applicationActivities: nil
            )
            
            // üíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –°–°–´–õ–û–ö –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò
            Self.currentActivityViewController = activityVC
            Self.currentPresentingViewController = presentingViewController
            
            // –ò—Å–∫–ª—é—á–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–∏–ø—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            var excludedTypes: [UIActivity.ActivityType] = [
                .assignToContact,
                .addToReadingList,
                .openInIBooks,
                .markupAsPDF,
                .print,
                .copyToPasteboard  // –ú–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ–ª—å—à–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
            ]
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ç–∏–ø—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è iOS 13+ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–º–∏
            if #available(iOS 13.0, *) {
                excludedTypes.append(.collaborationInviteWithLink)
                excludedTypes.append(.collaborationCopyLink)
            }
            
            if #available(iOS 15.0, *) {
                excludedTypes.append(.sharePlay)
            }
            
            activityVC.excludedActivityTypes = excludedTypes
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è iPad
            if UIDevice.current.userInterfaceIdiom == .pad {
                if let popover = activityVC.popoverPresentationController {
                    popover.sourceView = sourceView
                    popover.sourceRect = sourceRect
                    popover.permittedArrowDirections = [.up, .down]
                    print("‚úÖ SharingManager: –ù–∞—Å—Ç—Ä–æ–µ–Ω popover –¥–ª—è iPad")
                }
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è fallback options
            let originalImage = image
            
            // Callback –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
            activityVC.completionWithItemsHandler = { [weak self] activityType, completed, returnedItems, error in
                print("üîó SharingManager: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ sharing")
                print("   - activityType: \(activityType?.rawValue ?? "nil")")
                print("   - completed: \(completed)")
                print("   - error: \(error?.localizedDescription ?? "nil")")
                
                // üîì –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê –ò –û–ß–ò–°–¢–ö–ê –¢–ê–ô–ú–ï–†–ê
                Self.isCurrentlySharing = false
                Self.sharingTimer?.invalidate()
                Self.sharingTimer = nil
                Self.currentActivityViewController = nil
                Self.currentPresentingViewController = nil
                
                // üîç –î–ï–¢–ï–ö–¢–ò–†–û–í–ê–ù–ò–ï –ò–ó–í–ï–°–¢–ù–´–• –ü–†–û–ë–õ–ï–ú
                if let error = error {
                    Self.detectKnownIssues(error: error, activityType: activityType)
                } else if completed {
                    Self.shareSuccessCount += 1
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ Telegram
                if let activityType = activityType, activityType.rawValue.contains("telegra") {
                    print("üì± SharingManager: –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram sharing")
                    if completed {
                        print("‚úÖ SharingManager: Telegram —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ")
                    } else if error != nil {
                        print("‚ùå SharingManager: Telegram —Å–æ–æ–±—â–∏–ª –æ–± –æ—à–∏–±–∫–µ")
                    } else {
                        print("‚ùå SharingManager: Telegram sharing –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω")
                    }
                }
                
                if let error = error {
                    let errorMessage = error.localizedDescription
                    let errorCode = (error as NSError).code
                    print("‚ùå SharingManager: –û—à–∏–±–∫–∞ –ø—Ä–∏ sharing: \(errorMessage) (–∫–æ–¥: \(errorCode))")
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
                    let isExtensionError = errorMessage.contains("plugin") ||
                                         errorMessage.contains("extension") ||
                                         errorMessage.contains("interrupted") ||
                                         errorMessage.contains("invalidated") ||
                                         errorMessage.contains("Connection") ||
                                         errorCode == -1 || // Generic connection error
                                         errorCode == 4097 || // Connection interrupted
                                         errorCode == 4099 // Connection invalidated
                    
                    if isExtensionError {
                        print("üîß SharingManager: –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞")
                        print("üîß SharingManager: –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –º–æ–≥–ª–æ –ø—Ä–µ—Ä–≤–∞—Ç—å—Å—è, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–≥–ª–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                        
                        // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
                        DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
                            self?.showExtensionErrorAlert(from: presentingViewController, originalImage: originalImage, completion: completion)
                        }
                        return
                    }
                    
                    DispatchQueue.main.async {
                        self?.showSharingError(from: presentingViewController, message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: \(errorMessage)")
                    }
                } else if completed {
                    print("‚úÖ SharingManager: Sharing —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω")
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ Telegram - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    if let activityType = activityType, activityType.rawValue.contains("telegra") {
                        print("üéâ SharingManager: Detected Telegram success, showing success alert")
                        self?.waitForDismissalAndShowSuccess(from: presentingViewController)
                    }
                } else {
                    print("‚ÑπÔ∏è SharingManager: Sharing –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                }
                
                completion?()
            }
            
            print("üîó SharingManager: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ActivityViewController")
            
            // ‚è∞ –ó–ê–ü–£–°–ö –¢–ê–ô–ú–ï–†–ê –î–ï–¢–ï–ö–¢–ò–†–û–í–ê–ù–ò–Ø –ó–ê–í–ò–°–ê–ù–ò–Ø
            Self.startHangDetectionTimer(from: presentingViewController)
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            DispatchQueue.main.asyncAfter(deadline: .now() + 0.1) {
                presentingViewController.present(activityVC, animated: true) {
                    print("‚úÖ SharingManager: ActivityViewController –ø–æ–∫–∞–∑–∞–Ω")
                    
                    // üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ß–ï–†–ï–ó 2 –°–ï–ö–£–ù–î–´
                    DispatchQueue.main.asyncAfter(deadline: .now() + 2.0) {
                        Self.checkActivityViewControllerStatus()
                    }
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è Telegram —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥, –µ—Å–ª–∏ sharing –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
                    DispatchQueue.main.asyncAfter(deadline: .now() + 10.0) { [weak self] in
                        if presentingViewController.presentedViewController != nil {
                            print("‚è∞ SharingManager: Sharing –¥–ª–∏—Ç—Å—è –¥–æ–ª–≥–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É")
                            self?.showTelegramHangInstructions(from: presentingViewController)
                        }
                    }
                }
            }
        }
        
        /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É sharing
        private func showSharingError(from viewController: UIViewController, message: String) {
            let alert = UIAlertController(
                title: "–û—à–∏–±–∫–∞ –ø—Ä–∏ sharing",
                message: message,
                preferredStyle: .alert
            )
            
            alert.addAction(UIAlertAction(title: "OK", style: .default))
            
            viewController.present(alert, animated: true)
        }
        
        /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram sharing
        private func showTelegramSuccessAlert(from viewController: UIViewController) {
            print("üéâ SharingManager: showTelegramSuccessAlert called")
            print("üéâ SharingManager: viewController = \(viewController)")
            print("üéâ SharingManager: viewController.presentedViewController = \(String(describing: viewController.presentedViewController))")
            
            // –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π viewController –∑–∞–Ω—è—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ root
            let presentingVC: UIViewController
            if viewController.presentedViewController != nil {
                print("üéâ SharingManager: Main VC has modal, trying root VC")
                if let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene,
                   let window = windowScene.windows.first,
                   let rootVC = window.rootViewController {
                    presentingVC = rootVC
                    print("üéâ SharingManager: Using root VC: \(rootVC)")
                } else {
                    presentingVC = viewController
                    print("üéâ SharingManager: Fallback to original VC")
                }
            } else {
                presentingVC = viewController
            }
            
            let alert = UIAlertController(
                title: "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ Telegram!",
                message: "–ö–æ–ª–ª–∞–∂ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω –≤ Telegram! üéâ\n\nüìå –í–ê–ñ–ù–û: –î–∞–∂–µ –µ—Å–ª–∏ –≤—ã –Ω–∞–∂–∞–ª–∏ \"–û—Ç–º–µ–Ω–∞\", –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –£–ñ–ï –ü–ï–†–ï–î–ê–ù–û –≤ Telegram!\n\n–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:\n\n1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram\n2Ô∏è‚É£ –í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏\n3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ\n\nüí° –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å iOS 18 - \"–æ—Ç–º–µ–Ω–∞\" –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç –Ω–µ—É–¥–∞—á—É!",
                preferredStyle: .alert
            )
            
            alert.addAction(UIAlertAction(title: "–ü–æ–Ω—è—Ç–Ω–æ", style: .default))
            
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Telegram (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
            alert.addAction(UIAlertAction(title: "–û—Ç–∫—Ä—ã—Ç—å Telegram", style: .default) { _ in
                if let telegramURL = URL(string: "tg://"),
                   UIApplication.shared.canOpenURL(telegramURL) {
                    UIApplication.shared.open(telegramURL)
                }
            })
            
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
            alert.addAction(UIAlertAction(title: "–û–±–Ω–æ–≤–∏—Ç—å Telegram", style: .default) { _ in
                if let appStoreURL = URL(string: "https://apps.apple.com/ru/app/telegram/id747648890") {
                    UIApplication.shared.open(appStoreURL)
                }
            })
            
            print("üéâ SharingManager: About to present Telegram success alert via \(presentingVC)")
            presentingVC.present(alert, animated: true) {
                print("üéâ SharingManager: Telegram success alert presented successfully")
            }
        }
        
        /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫–æ–≥–¥–∞ Telegram sharing "–∑–∞–≤–∏—Å–∞–µ—Ç"
        private func showTelegramHangInstructions(from viewController: UIViewController) {
            print("üí° SharingManager: Showing Telegram hang instructions")
            
            // –°–æ–∑–¥–∞–µ–º –æ–≤–µ—Ä–ª–µ–π –ø–æ–≤–µ—Ä—Ö ActivityViewController
            let alert = UIAlertController(
                title: "üì± Telegram –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç?",
                message: "–≠—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ iOS 18 —Å Telegram.\n\n‚úÖ –í–ê–®–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ï –£–ñ–ï –ü–ï–†–ï–î–ê–ù–û!\n\nüîß –ß—Ç–æ –¥–µ–ª–∞—Ç—å:\n\n1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ \"–û—Ç–º–µ–Ω–∞\" –≤ Telegram\n2Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram\n3Ô∏è‚É£ –í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ç–∞–º!\n\n‚ö†Ô∏è –ù–µ –Ω–∞–∂–∏–º–∞–π—Ç–µ \"–û—Ç–ø—Ä–∞–≤–∏—Ç—å\" –ø–æ–≤—Ç–æ—Ä–Ω–æ",
                preferredStyle: .alert
            )
            
            // –°–æ–∑–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
            alert.addAction(UIAlertAction(title: "–ü–æ–Ω—è—Ç–Ω–æ", style: .default) { _ in
                print("üîó SharingManager: User tapped '–ü–æ–Ω—è—Ç–Ω–æ' in hang instructions")
            })
            
            alert.addAction(UIAlertAction(title: "–û—Ç–∫—Ä—ã—Ç—å Telegram", style: .default) { _ in
                print("üîó SharingManager: User chose to open Telegram")
                if let telegramURL = URL(string: "tg://"),
                   UIApplication.shared.canOpenURL(telegramURL) {
                    UIApplication.shared.open(telegramURL)
                }
            })
            
            // –£–º–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è: –Ω–∞—Ö–æ–¥–∏–º –¥–æ—Å—Ç—É–ø–Ω—ã–π view controller
            self.findAvailableViewControllerAndPresent(alert: alert, fallbackVC: viewController)
        }
        
        /// –ù–∞—Ö–æ–¥–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–π view controller –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ alert
        private func findAvailableViewControllerAndPresent(alert: UIAlertController, fallbackVC: UIViewController) {
            print("üîç SharingManager: Finding available view controller for alert presentation")
            
            // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ root view controller
            if let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene,
               let window = windowScene.windows.first,
               let rootVC = window.rootViewController {
                
                // –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—ã–π –≤–µ—Ä—Ö–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π view controller
                var topVC = rootVC
                
                // –ò–¥–µ–º –ø–æ —Ü–µ–ø–æ—á–∫–µ presented view controllers
                while let presented = topVC.presentedViewController {
                    // –ï—Å–ª–∏ —ç—Ç–æ UIActivityViewController —Å SLComposeViewController - –Ω–µ –º–æ–∂–µ–º –ø–æ–∫–∞–∑–∞—Ç—å alert
                    if presented is UIActivityViewController {
                        print("üîç SharingManager: Found UIActivityViewController, cannot present alert on top")
                        break
                    }
                    topVC = presented
                }
                
                // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º alert
                if topVC != rootVC.presentedViewController || !(topVC is UIActivityViewController) {
                    print("‚úÖ SharingManager: Presenting alert via \(topVC)")
                    topVC.present(alert, animated: true) {
                        print("‚úÖ SharingManager: Telegram hang instructions presented successfully")
                    }
                    return
                }
            }
            
            // Fallback: —Å–æ–∑–¥–∞–µ–º overlay –ø—Ä—è–º–æ –≤ window
            print("‚ö†Ô∏è SharingManager: Creating window overlay for alert")
            self.createWindowOverlayAlert(alert: alert)
        }
        
        /// –°–æ–∑–¥–∞–µ—Ç overlay alert –ø—Ä—è–º–æ –≤ window –¥–ª—è —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å present
        private func createWindowOverlayAlert(alert: UIAlertController) {
            print("üì± SharingManager: Creating window overlay alert")
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π window –¥–ª—è alert
            if let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene {
                let overlayWindow = UIWindow(windowScene: windowScene)
                overlayWindow.windowLevel = UIWindow.Level.alert + 1
                overlayWindow.backgroundColor = UIColor.clear
                
                // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π root view controller
                let overlayVC = UIViewController()
                overlayWindow.rootViewController = overlayVC
                overlayWindow.makeKeyAndVisible()
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º alert —á–µ—Ä–µ–∑ overlay view controller
                overlayVC.present(alert, animated: true) {
                    print("‚úÖ SharingManager: Window overlay alert presented successfully")
                }
                
                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º overlay window —á–µ—Ä–µ–∑ —Ä–∞–∑—É–º–Ω–æ–µ –≤—Ä–µ–º—è
                DispatchQueue.main.asyncAfter(deadline: .now() + 30.0) {
                    overlayWindow.isHidden = true
                    print("‚úÖ SharingManager: Window overlay alert auto-dismissed")
                }
            } else {
                print("‚ùå SharingManager: Cannot create window overlay - no window scene")
            }
        }
        
        /// –ñ–¥–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —É—Å–ø–µ—Ö–∞
        private func waitForDismissalAndShowSuccess(from viewController: UIViewController) {
            print("üéâ SharingManager: waitForDismissalAndShowSuccess called")
            
            func checkAndShow() {
                print("üéâ SharingManager: Checking if we can show success dialog...")
                print("üéâ SharingManager: presentedViewController = \(String(describing: viewController.presentedViewController))")
                
                if viewController.presentedViewController == nil {
                    print("üéâ SharingManager: No modal present, showing success dialog")
                    self.showTelegramSuccessAlert(from: viewController)
                } else {
                    print("üéâ SharingManager: Modal still present, waiting 0.5s more...")
                    DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
                        checkAndShow()
                    }
                }
            }
            
            // –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –¥–∞—Ç—å –≤—Ä–µ–º—è UIActivityViewController –∑–∞–∫—Ä—ã—Ç—å—Å—è
            DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
                checkAndShow()
            }
        }
        
        /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–ª–µ—Ä—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–±–ª–µ–º–µ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
        private func showExtensionErrorAlert(
            from viewController: UIViewController, 
            originalImage: UIImage,
            completion: (() -> Void)? = nil
        ) {
            let alert = UIAlertController(
                title: "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º",
                message: "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Telegram) –ø—Ä–µ—Ä–≤–∞–ª–æ—Å—å –≤–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏. –≠—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ iOS 18 —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏.\n\nüì± –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–≥–ª–æ –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:",
                preferredStyle: .alert
            )
            
            // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Telegram
            alert.addAction(UIAlertAction(title: "üì± –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Telegram", style: .default) { _ in
                print("üîß SharingManager: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—Ä–æ–≤–µ—Ä–∫—É Telegram")
                if let telegramURL = URL(string: "tg://"),
                   UIApplication.shared.canOpenURL(telegramURL) {
                    UIApplication.shared.open(telegramURL)
                }
            })
            
            // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –§–æ—Ç–æ
            alert.addAction(UIAlertAction(title: "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –§–æ—Ç–æ", style: .default) { _ in
                print("üîß SharingManager: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º")
                UIImageWriteToSavedPhotosAlbum(originalImage, nil, nil, nil)
                
                DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
                    let successAlert = UIAlertController(
                        title: "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ",
                        message: "–ö–æ–ª–ª–∞–∂ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–º –∏–∑ –≥–∞–ª–µ—Ä–µ–∏.",
                        preferredStyle: .alert
                    )
                    successAlert.addAction(UIAlertAction(title: "OK", style: .default))
                    viewController.present(successAlert, animated: true)
                }
                
                completion?()
            })
            
            // –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
            alert.addAction(UIAlertAction(title: "üîí –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º", style: .default) { [weak self] _ in
                print("üîß SharingManager: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º sharing")
                guard let self = self else { return }
                
                self.safeModeShareImage(
                    originalImage,
                    sourceView: viewController.view,
                    sourceRect: CGRect(x: viewController.view.bounds.midX, y: viewController.view.bounds.midY, width: 0, height: 0),
                    from: viewController,
                    completion: completion
                )
            })
            
            // –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑
            alert.addAction(UIAlertAction(title: "üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", style: .default) { [weak self] _ in
                print("üîß SharingManager: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø–æ–ø—ã—Ç–∫—É")
                guard let self = self else { return }
                
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
                DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {
                    self.simpleShareImage(
                        originalImage,
                        sourceView: viewController.view,
                        sourceRect: CGRect(x: viewController.view.bounds.midX, y: viewController.view.bounds.midY, width: 0, height: 0),
                        from: viewController,
                        completion: completion
                    )
                }
            })
            
            // –û—Ç–º–µ–Ω–∞
            alert.addAction(UIAlertAction(title: "–û—Ç–º–µ–Ω–∞", style: .cancel) { _ in
                print("‚ÑπÔ∏è SharingManager: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª sharing –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è")
                completion?()
            })
            
            viewController.present(alert, animated: true)
        }
        
        /// –î–µ–ª–∏—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è –∫–æ–ª–ª–∞–∂–∞
        /// - Parameters:
        ///   - image: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–ª–ª–∞–∂–∞
        ///   - templateName: –ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –∫–æ–ª–ª–∞–∂–∞
        ///   - sourceView: View –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        ///   - sourceRect: Rect –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        ///   - presentingViewController: View controller –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
        func shareCollage(
            _ image: UIImage,
            templateName: String? = nil,
            sourceView: UIView,
            sourceRect: CGRect,
            from presentingViewController: UIViewController,
            completion: (() -> Void)? = nil
        ) {
            var shareText = "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –º–æ–π –∫–æ–ª–ª–∞–∂, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ CollageMaker! üì∏‚ú®"
            
            if let templateName = templateName {
                shareText += "\n–®–∞–±–ª–æ–Ω: \(templateName)"
            }
            
            shareImage(
                image,
                withText: shareText,
                sourceView: sourceView,
                sourceRect: sourceRect,
                from: presentingViewController,
                completion: completion
            )
        }
        
        /// –°–æ–∑–¥–∞–µ—Ç UIActivityViewController —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        /// - Parameters:
        ///   - items: –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è sharing
        ///   - sourceView: View –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        ///   - sourceRect: Rect –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        /// - Returns: –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π UIActivityViewController
        func createActivityViewController(
            with items: [Any],
            sourceView: UIView,
            sourceRect: CGRect
        ) -> UIActivityViewController {
            let activityVC = UIActivityViewController(
                activityItems: items,
                applicationActivities: nil
            )
            
            // –ò—Å–∫–ª—é—á–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–∏–ø—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            activityVC.excludedActivityTypes = [
                .assignToContact,
                .addToReadingList,
                .openInIBooks,
                .markupAsPDF
            ]
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è iPad
            if UIDevice.current.userInterfaceIdiom == .pad {
                if let popover = activityVC.popoverPresentationController {
                    popover.sourceView = sourceView
                    popover.sourceRect = sourceRect
                    popover.permittedArrowDirections = [.up, .down]
                }
            }
            
            return activityVC
        }
        
        /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å sharing –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        /// - Returns: true –µ—Å–ª–∏ sharing –¥–æ—Å—Ç—É–ø–µ–Ω
        func isSharingAvailable() -> Bool {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å UIActivityViewController
            return true // UIActivityViewController –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ iOS
        }
        
        /// –¢–µ—Å—Ç–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–∏–∞–ª–æ–≥–∞ —É—Å–ø–µ—Ö–∞ Telegram (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
        func testShowTelegramSuccessDialog(from viewController: UIViewController) {
            print("üß™ SharingManager: Test method called - showing Telegram success dialog")
            showTelegramSuccessAlert(from: viewController)
        }
        
        /// –¢–µ—Å—Ç–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–∏–∞–ª–æ–≥–∞ –∑–∞–≤–∏—Å–∞–Ω–∏—è Telegram (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
        func testShowTelegramHangDialog(from viewController: UIViewController) {
            print("üß™ SharingManager: Test method called - showing Telegram hang dialog")
            showTelegramHangInstructions(from: viewController)
        }
        
        /// –°–æ–∑–¥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è sharing
        /// - Parameter image: –ò—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        /// - Returns: –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPEG
        func optimizeImageForSharing(_ image: UIImage) -> Data? {
            return autoreleasepool {
                print("üîß SharingManager: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è sharing")
                
                // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è sharing
                let maxSize: CGFloat = 2048
                
                let optimizedImage: UIImage
                
                // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–ª–µ–Ω—å–∫–æ–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
                if image.size.width <= maxSize && image.size.height <= maxSize {
                    optimizedImage = image
                    print("üîß SharingManager: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞")
                } else {
                    // –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
                    let aspectRatio = image.size.width / image.size.height
                    let newSize: CGSize
                    
                    if aspectRatio > 1 {
                        // –®–∏—Ä–∏–Ω–∞ –±–æ–ª—å—à–µ –≤—ã—Å–æ—Ç—ã
                        newSize = CGSize(width: maxSize, height: maxSize / aspectRatio)
                    } else {
                        // –í—ã—Å–æ—Ç–∞ –±–æ–ª—å—à–µ —à–∏—Ä–∏–Ω—ã
                        newSize = CGSize(width: maxSize * aspectRatio, height: maxSize)
                    }
                    
                    print("üîß SharingManager: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Å \(image.size) –Ω–∞ \(newSize)")
                    
                    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    UIGraphicsBeginImageContextWithOptions(newSize, false, 0.0)
                    image.draw(in: CGRect(origin: .zero, size: newSize))
                    optimizedImage = UIGraphicsGetImageFromCurrentImageContext() ?? image
                    UIGraphicsEndImageContext()
                }
                
                // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JPEG Data –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å sharing extensions
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ 0.9 –¥–ª—è –±–∞–ª–∞–Ω—Å–∞ –º–µ–∂–¥—É –∫–∞—á–µ—Å—Ç–≤–æ–º –∏ —Ä–∞–∑–º–µ—Ä–æ–º
                guard let imageData = optimizedImage.jpegData(compressionQuality: 0.9) else {
                    print("‚ùå SharingManager: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å JPEG –¥–∞–Ω–Ω—ã–µ")
                    return nil
                }
                
                let sizeInMB = Double(imageData.count) / 1_048_576
                print("üîß SharingManager: –†–∞–∑–º–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: \(String(format: "%.2f", sizeInMB)) MB")
                
                return imageData
            }
        }
        
        /// –ü—Ä–æ—Å—Ç–æ–π sharing –±–µ–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        /// - Parameters:
        ///   - image: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è sharing
        ///   - sourceView: View –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        ///   - sourceRect: Rect –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        ///   - presentingViewController: View controller –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
        func simpleShareImage(
            _ image: UIImage,
            sourceView: UIView,
            sourceRect: CGRect,
            from presentingViewController: UIViewController,
            completion: (() -> Void)? = nil
        ) {
            print("üîó SharingManager: –ü—Ä–æ—Å—Ç–æ–π sharing –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            
            // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è sharing
            guard let optimizedImageData = optimizeImageForSharing(image) else {
                print("‚ùå SharingManager: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ sharing")
                return
            }
            
            let activityVC = UIActivityViewController(
                activityItems: [optimizedImageData],
                applicationActivities: nil
            )
            
            // –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –∏—Å–∫–ª—é—á–∞–µ–º –≤—Å–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–∏–ø—ã
            var excludedTypes: [UIActivity.ActivityType] = [
                .assignToContact,
                .addToReadingList,
                .openInIBooks,
                .markupAsPDF,
                .copyToPasteboard,
                .print,

            ]
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ç–∏–ø—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è iOS 13+
            if #available(iOS 13.0, *) {
                excludedTypes.append(.collaborationInviteWithLink)
                excludedTypes.append(.collaborationCopyLink)
            }
            
            activityVC.excludedActivityTypes = excludedTypes
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è iPad
            if UIDevice.current.userInterfaceIdiom == .pad {
                if let popover = activityVC.popoverPresentationController {
                    popover.sourceView = sourceView
                    popover.sourceRect = sourceRect
                    popover.permittedArrowDirections = [.up, .down]
                }
            }
            
            activityVC.completionWithItemsHandler = { _, completed, _, error in
                if let error = error {
                    print("‚ùå SharingManager (Simple): \(error.localizedDescription)")
                } else if completed {
                    print("‚úÖ SharingManager (Simple): Sharing –∑–∞–≤–µ—Ä—à–µ–Ω")
                }
                completion?()
            }
            
            presentingViewController.present(activityVC, animated: true) {
                print("‚úÖ SharingManager (Simple): ActivityViewController –ø–æ–∫–∞–∑–∞–Ω")
            }
        }
        
        /// –£–ª—å—Ç—Ä–∞-–±–µ–∑–æ–ø–∞—Å–Ω—ã–π sharing —Ç–æ–ª—å–∫–æ —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
        /// - Parameters:
        ///   - image: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è sharing
        ///   - sourceView: View –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        ///   - sourceRect: Rect –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è popover –Ω–∞ iPad
        ///   - presentingViewController: View controller –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
        func safeModeShareImage(
            _ image: UIImage,
            sourceView: UIView,
            sourceRect: CGRect,
            from presentingViewController: UIViewController,
            completion: (() -> Void)? = nil
        ) {
            print("üîí SharingManager: –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º sharing (—Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ–ø—Ü–∏–∏)")
            
            // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è sharing
            guard let optimizedImageData = optimizeImageForSharing(image) else {
                print("‚ùå SharingManager: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ sharing")
                return
            }
            
            // –°–æ–∑–¥–∞–µ–º —Å–≤–æ–π –∫–∞—Å—Ç–æ–º–Ω—ã–π UIActivity –¥–ª—è "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º"
            let saveToPhotosActivity = SaveToPhotosActivity()
            
            let activityVC = UIActivityViewController(
                activityItems: [optimizedImageData, image], // –ü–µ—Ä–µ–¥–∞–µ–º –∏ Data –∏ UIImage –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é
                applicationActivities: [saveToPhotosActivity]
            )
            
            // –ò—Å–∫–ª—é—á–∞–µ–º –í–°–ï —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—à–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ
            activityVC.excludedActivityTypes = [
                .postToFacebook,
                .postToTwitter,
                .postToWeibo,
                .message,
                .mail,
                .print,
                .copyToPasteboard,
                .assignToContact,
                .saveToCameraRoll,
                .addToReadingList,
                .postToFlickr,
                .postToVimeo,
                .postToTencentWeibo,
                .airDrop,
                .openInIBooks,
                .markupAsPDF
            ]
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ç–∏–ø—ã –¥–ª—è iOS 13+
            if #available(iOS 13.0, *) {
                activityVC.excludedActivityTypes?.append(.collaborationInviteWithLink)
                activityVC.excludedActivityTypes?.append(.collaborationCopyLink)
                activityVC.excludedActivityTypes?.append(.sharePlay)
            }
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è iPad
            if UIDevice.current.userInterfaceIdiom == .pad {
                if let popover = activityVC.popoverPresentationController {
                    popover.sourceView = sourceView
                    popover.sourceRect = sourceRect
                    popover.permittedArrowDirections = [.up, .down]
                }
            }
            
            activityVC.completionWithItemsHandler = { _, completed, _, error in
                if let error = error {
                    print("‚ùå SharingManager (Safe): \(error.localizedDescription)")
                } else if completed {
                    print("‚úÖ SharingManager (Safe): Sharing –∑–∞–≤–µ—Ä—à–µ–Ω")
                } else {
                    print("‚ÑπÔ∏è SharingManager (Safe): Sharing –æ—Ç–º–µ–Ω–µ–Ω")
                }
                completion?()
            }
            
            presentingViewController.present(activityVC, animated: true) {
                print("‚úÖ SharingManager (Safe): ActivityViewController –ø–æ–∫–∞–∑–∞–Ω")
            }
        }
        
        // MARK: - üîç –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´
        
        /// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–¥ —à–∞—Ä–∏–Ω–≥–æ–º
        static func diagnoseSystemState() {
            print("üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –°–ò–°–¢–ï–ú–´ ===")
            
            // üì± –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï
            let systemVersion = UIDevice.current.systemVersion
            let deviceModel = UIDevice.current.model
            print("üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: \(deviceModel), iOS: \(systemVersion)")
            
            // üíæ –ü–ê–ú–Ø–¢–¨
            let memoryUsage = getMemoryUsage()
            print("üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: \(memoryUsage)MB")
            
            // üîó –ü–†–û–í–ï–†–ö–ê BACKGROUND APP REFRESH
            let backgroundRefreshStatus = UIApplication.shared.backgroundRefreshStatus
            print("üîó Background Refresh: \(backgroundRefreshStatus.rawValue)")
            
            // üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–ï–î–´–î–£–©–ò–• –ü–û–ü–´–¢–û–ö
            sharingAttempts += 1
            print("üìä –ü–æ–ø—ã—Ç–∫–∞ —à–∞—Ä–∏–Ω–≥–∞ #\(sharingAttempts)")
            print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –£—Å–ø–µ—à–Ω—ã—Ö: \(shareSuccessCount), –ù–µ—É–¥–∞—á–Ω—ã—Ö: \(shareFailureCount)")
            
            if !errorStats.isEmpty {
                print("üìä –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏:")
                for (errorKey, count) in errorStats {
                    print("   - \(errorKey): \(count) —Ä–∞–∑")
                }
            }
            
            // üö® –°–ò–°–¢–ï–ú–ù–´–ï –ü–†–û–ë–õ–ï–ú–´
            if !systemIssuesDetected.isEmpty {
                print("üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
                for issue in systemIssuesDetected {
                    print("   - \(issue)")
                }
            }
            
            // üîç –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø
            if isCurrentlySharing {
                print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –®–∞—Ä–∏–Ω–≥ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ!")
            }
            
            // üîç –ü–†–û–í–ï–†–ö–ê ENTITLEMENTS
            checkEntitlements()
        }
        
        /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏
        static func getMemoryUsage() -> Int {
            var taskInfo = mach_task_basic_info()
            var count = mach_msg_type_number_t(MemoryLayout<mach_task_basic_info>.size)/4
            
            let kerr: kern_return_t = withUnsafeMutablePointer(to: &taskInfo) {
                $0.withMemoryRebound(to: integer_t.self, capacity: 1) {
                    task_info(mach_task_self_, task_flavor_t(MACH_TASK_BASIC_INFO), $0, &count)
                }
            }
            
            if kerr == KERN_SUCCESS {
                return Int(taskInfo.resident_size) / 1024 / 1024
            }
            
            return 0
        }
        
        /// –ü—Ä–æ–≤–µ—Ä–∫–∞ entitlements
        static func checkEntitlements() {
            print("üîç === –ü–†–û–í–ï–†–ö–ê ENTITLEMENTS ===")
            
            // üìã –ü–†–û–í–ï–†–ö–ê –û–°–ù–û–í–ù–´–• ENTITLEMENTS
            let entitlements = [
                "com.apple.security.application-groups",
                "com.apple.developer.associated-domains",
                "com.apple.runningboard.process-state"
            ]
            
            for entitlement in entitlements {
                print("üìã Entitlement \(entitlement): –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ Info.plist")
            }
        }
        
        /// –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–∏—Å–∞–Ω–∏—è
        static func startHangDetectionTimer(from viewController: UIViewController) {
            print("‚è∞ –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–∏—Å–∞–Ω–∏—è (20 —Å–µ–∫—É–Ω–¥)")
            
            // üîí –ë–õ–û–ö–ò–†–û–í–ö–ê –ü–û–í–¢–û–†–ù–´–• –ü–û–ü–´–¢–û–ö
            isCurrentlySharing = true
            currentPresentingViewController = viewController
            
            // ‚è∞ –°–û–ó–î–ê–ù–ò–ï –¢–ê–ô–ú–ï–†–ê
            sharingTimer = Timer.scheduledTimer(withTimeInterval: 20.0, repeats: false) { _ in
                
                print("üö® === –î–ï–¢–ï–ö–¢–ò–†–û–í–ê–ù–û –ó–ê–í–ò–°–ê–ù–ò–ï –®–ê–†–ò–ù–ì–ê ===")
                print("‚è∞ –ü—Ä–æ—à–ª–æ 20 —Å–µ–∫—É–Ω–¥ –±–µ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —à–∞—Ä–∏–Ω–≥–∞")
                
                // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ò–°–ê–ù–ò–Ø
                diagnoseHangState()
                
                // üì± –ü–û–ö–ê–ó –ò–ù–°–¢–†–£–ö–¶–ò–ô
                showAdvancedHangInstructions()
                
                // üìä –î–û–ë–ê–í–õ–ï–ù–ò–ï –í –°–ò–°–¢–ï–ú–ù–´–ï –ü–†–û–ë–õ–ï–ú–´
                systemIssuesDetected.append("Hang detected after 20 seconds")
                shareFailureCount += 1
            }
        }
        
        /// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–∏—Å–∞–Ω–∏—è
        static func diagnoseHangState() {
            print("üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ò–°–ê–ù–ò–Ø ===")
            
            // üì± –°–¢–ê–¢–£–° ACTIVITY VIEW CONTROLLER
            if let activityVC = currentActivityViewController {
                print("üì± Activity VC —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: \(activityVC)")
                print("üì± Presented: \(activityVC.isBeingPresented)")
                print("üì± Presenting VC: \(activityVC.presentingViewController?.description ?? "nil")")
                
                // üîç –ü–†–û–í–ï–†–ö–ê POPOVER
                if let popover = activityVC.popoverPresentationController {
                    print("üì± Popover: \(popover)")
                    print("üì± Popover sourceView: \(popover.sourceView?.description ?? "nil")")
                }
            }
            
            // üîç –ü–†–û–í–ï–†–ö–ê –û–°–ù–û–í–ù–û–ì–û –ü–û–¢–û–ö–ê
            if Thread.isMainThread {
                print("üîç –ù–∞—Ö–æ–¥–∏–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ")
            } else {
                print("‚ö†Ô∏è –ù–ï –≤ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ!")
            }
            
            // üìä –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –†–ï–°–£–†–°–û–í
            let memoryUsage = getMemoryUsage()
            print("üíæ –¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: \(memoryUsage)MB")
            
            // üîç –ü–†–û–í–ï–†–ö–ê RUNLOOP
            print("üîÑ RunLoop: \(RunLoop.current)")
        }
        
            /// –ü–æ–∫–∞–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø—Ä–∏ –∑–∞–≤–∏—Å–∞–Ω–∏–∏
    static func showAdvancedHangInstructions() {
        guard let presentingVC = currentPresentingViewController else {
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω presenting view controller –¥–ª—è –ø–æ–∫–∞–∑–∞ alert")
            return
        }
        
        // üö® –°–ù–ê–ß–ê–õ–ê –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ó–ê–ö–†–´–í–ê–ï–ú –ó–ê–í–ò–°–®–ò–ô ACTIVITY VC
        if let activityVC = currentActivityViewController {
            print("üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∑–∞–≤–∏—Å—à–∏–π Activity ViewController")
            activityVC.dismiss(animated: false) {
                // –ü–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º alert
                showHangAlert(from: presentingVC)
            }
        } else {
            // –ï—Å–ª–∏ Activity VC —É–∂–µ –∑–∞–∫—Ä—ã—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º alert —Å—Ä–∞–∑—É
            showHangAlert(from: presentingVC)
        }
    }
    
    /// –ü–æ–∫–∞–∑ alert'–∞ –æ –∑–∞–≤–∏—Å–∞–Ω–∏–∏
    private static func showHangAlert(from presentingVC: UIViewController) {
        let alert = UIAlertController(
            title: "üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∑–∞–≤–∏—Å–∞–Ω–∏–µ —à–∞—Ä–∏–Ω–≥–∞ (iOS 18)",
            message: """
            –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ iOS 18 —Å —à–∞—Ä–∏–Ω–≥–æ–º!
            
            üîç –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:
            ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —à–∞—Ä–∏–Ω–≥–∞ –∑–∞–≤–∏—Å–ª–∞ –Ω–∞ 20+ —Å–µ–∫—É–Ω–¥
            ‚Ä¢ –≠—Ç–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ iOS 18
            ‚Ä¢ –î–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ã, –Ω–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≤–∏—Å
            
            üì± –ß—Ç–æ –¥–µ–ª–∞—Ç—å:
            1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑
            2. –û–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–æ—Å–æ–±–µ–Ω–Ω–æ Telegram)
            3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± —à–∞—Ä–∏–Ω–≥–∞
            4. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            
            üîÑ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–æ–≥
            """,
            preferredStyle: .alert
        )
        
        // üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê
        alert.addAction(UIAlertAction(title: "üîß –û—á–∏—Å—Ç–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ", style: .default) { _ in
            forceCleanupSharing()
        })
        
        // üìä –ü–û–ö–ê–ó–ê–¢–¨ –°–¢–ê–¢–ò–°–¢–ò–ö–£
        alert.addAction(UIAlertAction(title: "üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", style: .default) { _ in
            showDetailedErrorLog()
        })
        
        // ‚ùå –ó–ê–ö–†–´–¢–¨
        alert.addAction(UIAlertAction(title: "‚ùå –ó–∞–∫—Ä—ã—Ç—å", style: .cancel))
        
        // üì± –ü–û–ö–ê–ó ALERT
        DispatchQueue.main.async {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å alert
            if presentingVC.presentedViewController == nil {
                presentingVC.present(alert, animated: true)
            } else {
                print("‚ö†Ô∏è –ù–µ–ª—å–∑—è –ø–æ–∫–∞–∑–∞—Ç—å alert - —É–∂–µ —á—Ç–æ-—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ")
                // –í–º–µ—Å—Ç–æ alert –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
                print("üö® –ó–ê–í–ò–°–ê–ù–ò–ï –®–ê–†–ò–ù–ì–ê –î–ï–¢–ï–ö–¢–ò–†–û–í–ê–ù–û - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏")
            }
        }
    }
        
            /// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —à–∞—Ä–∏–Ω–≥–∞
    static func forceCleanupSharing() {
        print("üîß === –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –®–ê–†–ò–ù–ì–ê ===")
        
        // üîì –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê
        isCurrentlySharing = false
        
        // ‚è∞ –û–°–¢–ê–ù–û–í–ö–ê –¢–ê–ô–ú–ï–†–ê
        sharingTimer?.invalidate()
        sharingTimer = nil
        
        // üóëÔ∏è –û–ß–ò–°–¢–ö–ê –°–°–´–õ–û–ö
        if let activityVC = currentActivityViewController {
            print("üóëÔ∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ Activity View Controller")
            DispatchQueue.main.async {
                activityVC.dismiss(animated: false) {
                    print("‚úÖ Activity ViewController –∑–∞–∫—Ä—ã—Ç")
                }
            }
        }
        
        // üßπ –û–ß–ò–°–¢–ö–ê –í–°–ï–• –°–°–´–õ–û–ö
        currentActivityViewController = nil
        currentPresentingViewController = nil
        
        // üìä –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò
        shareFailureCount += 1
        systemIssuesDetected.append("Forced cleanup after hang - iOS 18 sharing issue")
        
        // üîÑ –ù–ï–ë–û–õ–¨–®–ê–Ø –ó–ê–î–ï–†–ñ–ö–ê –î–õ–Ø –°–¢–ê–ë–ò–õ–ò–ó–ê–¶–ò–ò UI
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
            print("‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –≥–æ—Ç–æ–≤–æ –∫ –Ω–æ–≤–æ–º—É —à–∞—Ä–∏–Ω–≥—É")
        }
    }
        
        /// –î–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
        static func detectKnownIssues(error: Error, activityType: UIActivity.ActivityType?) {
            print("üîç === –î–ï–¢–ï–ö–¢–ò–†–û–í–ê–ù–ò–ï –ò–ó–í–ï–°–¢–ù–´–• –ü–†–û–ë–õ–ï–ú ===")
            
            let errorCode = error._code
            let errorDomain = error._domain
            
            // üîç –ò–ó–í–ï–°–¢–ù–´–ï –ö–û–î–´ –û–®–ò–ë–û–ö iOS 18
            switch errorCode {
            case 4099:
                print("üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ 4099 (connection invalidated)")
                systemIssuesDetected.append("Error 4099: Connection invalidated - iOS 18 bug")
                
            case 4097:
                print("üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ 4097 (XPC connection interrupted)")
                systemIssuesDetected.append("Error 4097: XPC connection interrupted")
                
            case 1:
                if errorDomain.contains("RBSService") {
                    print("üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ RBSService (RunningBoard)")
                    systemIssuesDetected.append("RBSService error: RunningBoard service issue")
                }
                
            case 509:
                print("üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ 509 (bug type –∏–∑ crash report)")
                systemIssuesDetected.append("Error 509: Known crash bug type")
                
            default:
                print("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: \(errorCode)")
            }
            
            // üîç –ü–†–û–í–ï–†–ö–ê –î–û–ú–ï–ù–ê –û–®–ò–ë–ö–ò
            if errorDomain.contains("NSCocoaErrorDomain") {
                print("üö® NSCocoaErrorDomain - –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏")
                systemIssuesDetected.append("NSCocoaErrorDomain error")
            }
            
            // üîç –ü–†–û–í–ï–†–ö–ê –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
            if let activityType = activityType {
                if activityType.rawValue.contains("Telegraph") {
                    print("üö® Telegram-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞")
                    systemIssuesDetected.append("Telegram-specific issue")
                }
            }
            
            // üìä –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò –û–®–ò–ë–û–ö
            let errorKey = "\(errorDomain)_\(errorCode)"
            errorStats[errorKey] = (errorStats[errorKey] ?? 0) + 1
            shareFailureCount += 1
        }
        
        /// –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∞ –æ—à–∏–±–æ–∫
        static func showDetailedErrorLog() {
            print("üìä === –î–ï–¢–ê–õ–¨–ù–´–ô –õ–û–ì –û–®–ò–ë–û–ö ===")
            print("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print("   - –í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫: \(sharingAttempts)")
            print("   - –£—Å–ø–µ—à–Ω—ã—Ö: \(shareSuccessCount)")
            print("   - –ù–µ—É–¥–∞—á–Ω—ã—Ö: \(shareFailureCount)")
            print("   - –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: \(shareSuccessCount > 0 ? Double(shareSuccessCount) / Double(sharingAttempts) * 100 : 0)%")
            
            if !errorStats.isEmpty {
                print("üìä –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:")
                for (errorKey, count) in errorStats.sorted(by: { $0.value > $1.value }) {
                    print("   - \(errorKey): \(count) —Ä–∞–∑")
                }
            }
            
            if !systemIssuesDetected.isEmpty {
                print("üö® –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
                for issue in systemIssuesDetected {
                    print("   - \(issue)")
                }
            }
        }
        
            /// –ü–æ–∫–∞–∑ alert –æ —Ç–µ–∫—É—â–µ–º —à–∞—Ä–∏–Ω–≥–µ
    static func showCurrentSharingAlert(from viewController: UIViewController) {
        // üîç –ü–†–û–í–ï–†–Ø–ï–ú, –ú–û–ñ–ù–û –õ–ò –ü–û–ö–ê–ó–ê–¢–¨ ALERT
        if viewController.presentedViewController != nil {
            print("‚ö†Ô∏è –ù–µ–ª—å–∑—è –ø–æ–∫–∞–∑–∞—Ç—å alert –æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º —à–∞—Ä–∏–Ω–≥–µ - —É–∂–µ —á—Ç–æ-—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ")
            print("üîÑ –ü–û–í–¢–û–†–ù–´–ô –®–ê–†–ò–ù–ì: –ø–æ–ø—ã—Ç–∫–∞ #\(sharingAttempts)")
            return
        }
        
        let alert = UIAlertController(
            title: "üîÑ –®–∞—Ä–∏–Ω–≥ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ",
            message: """
            –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —à–∞—Ä–∏–Ω–≥–∞!
            
            üì± –ß—Ç–æ –¥–µ–ª–∞—Ç—å:
            ‚Ä¢ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —à–∞—Ä–∏–Ω–≥–∞
            ‚Ä¢ –ò–ª–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—Å—Ç–∏—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            
            ‚è∞ –ü–æ–ø—ã—Ç–∫–∞ #\(sharingAttempts)
            """,
            preferredStyle: .alert
        )
        
        alert.addAction(UIAlertAction(title: "üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞", style: .default) { _ in
            forceCleanupSharing()
        })
        
        alert.addAction(UIAlertAction(title: "‚è∞ –ü–æ–¥–æ–∂–¥–∞—Ç—å", style: .cancel))
        
        DispatchQueue.main.async {
            viewController.present(alert, animated: true)
        }
    }
        
        /// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Activity View Controller
        static func checkActivityViewControllerStatus() {
            print("üîç === –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê ACTIVITY VIEW CONTROLLER ===")
            
            guard let activityVC = currentActivityViewController else {
                print("‚ùå Activity View Controller –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            }
            
            print("üì± Activity VC —Å—Ç–∞—Ç—É—Å:")
            print("   - isBeingPresented: \(activityVC.isBeingPresented)")
            print("   - presentingViewController: \(activityVC.presentingViewController?.description ?? "nil")")
            print("   - view.window: \(activityVC.view.window?.description ?? "nil")")
            
            // üîç –ü–†–û–í–ï–†–ö–ê POPOVER
            if let popover = activityVC.popoverPresentationController {
                print("üì± Popover —Å—Ç–∞—Ç—É—Å:")
                print("   - sourceView: \(popover.sourceView?.description ?? "nil")")
                print("   - presentedViewController: \(popover.presentedViewController.description)")
            }
            
            // üîç –ü–†–û–í–ï–†–ö–ê –î–û–ß–ï–†–ù–ò–• VIEW CONTROLLERS
            if !activityVC.children.isEmpty {
                print("üë∂ –î–æ—á–µ—Ä–Ω–∏–µ VCs: \(activityVC.children.count)")
                for (index, child) in activityVC.children.enumerated() {
                    print("   - Child \(index): \(child.description)")
                }
            }
            
            // üîç –ü–†–û–í–ï–†–ö–ê VIEW HIERARCHY
            print("üèóÔ∏è View hierarchy:")
            print("   - view.superview: \(activityVC.view.superview?.description ?? "nil")")
            print("   - view.bounds: \(activityVC.view.bounds)")
            print("   - view.frame: \(activityVC.view.frame)")
            
            // üö® –î–ï–¢–ï–ö–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ë–õ–ï–ú
            if !activityVC.isBeingPresented && activityVC.presentingViewController == nil {
                print("üö® –ü–†–û–ë–õ–ï–ú–ê: Activity VC –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                systemIssuesDetected.append("Activity VC not displaying correctly")
            }
        }
    }
    
    /// –ö–∞—Å—Ç–æ–º–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º
    class SaveToPhotosActivity: UIActivity {
        
        private var savedImage: UIImage?
        
        override var activityType: UIActivity.ActivityType? {
            return UIActivity.ActivityType("com.collageMaker.saveToPhotos")
        }
        
        override var activityTitle: String? {
            return "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –§–æ—Ç–æ"
        }
        
        override var activityImage: UIImage? {
            return UIImage(systemName: "photo.badge.plus") ?? UIImage(systemName: "photo")
        }
        
        override func canPerform(withActivityItems activityItems: [Any]) -> Bool {
            return activityItems.contains { $0 is UIImage }
        }
        
        override func prepare(withActivityItems activityItems: [Any]) {
            savedImage = activityItems.first { $0 is UIImage } as? UIImage
        }
        
        override func perform() {
            guard let image = savedImage else {
                activityDidFinish(false)
                return
            }
            
            UIImageWriteToSavedPhotosAlbum(image, self, #selector(image(_:didFinishSavingWithError:contextInfo:)), nil)
        }
        
        @objc func image(_ image: UIImage, didFinishSavingWithError error: Error?, contextInfo: UnsafeRawPointer) {
            DispatchQueue.main.async {
                if error != nil {
                    print("‚ùå SaveToPhotosActivity: –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º")
                    self.activityDidFinish(false)
                } else {
                    print("‚úÖ SaveToPhotosActivity: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–æ—Ç–æ–∞–ª—å–±–æ–º")
                    self.activityDidFinish(true)
                }
            }
        }
    }
    
    // MARK: - üé≠ DELEGATE –î–õ–Ø PRESENTATION
    class SharingPresentationDelegate: NSObject, UIAdaptivePresentationControllerDelegate {
        
        func presentationControllerWillDismiss(_ presentationController: UIPresentationController) {
            print("üé≠ Presentation controller will dismiss")
        }
        
        func presentationControllerDidDismiss(_ presentationController: UIPresentationController) {
            print("üé≠ Presentation controller did dismiss")
            
            // üîì –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê –ü–†–ò –ó–ê–ö–†–´–¢–ò–ò
            SharingManager.forceCleanupSharing()
        }
        
        func presentationControllerDidAttemptToDismiss(_ presentationController: UIPresentationController) {
            print("üé≠ Presentation controller did attempt to dismiss")
        }
    }